<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>React (Native) Testing with Enzyme - By Jimmy Lv</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/kimbie.light.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.green.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>React (Native) Testing with Enzyme</h1>
<p><small>via <strong>Jimmy Lv</strong></small></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>模块化管理？</h1>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>JavaScript 模块化</h1>

</hgroup><article>

<pre><code class="javascript">import { shallow } from &#39;enzyme&#39;

describe(&#39;Enzyme Shallow&#39;, () =&gt; {
  it(&#39;App should have title equals to Todos&#39;, () =&gt; {
    let app = shallow(&lt;App /&gt;)
    expect(app.find(&#39;h1&#39;).text()).to.equal(&#39;Todos&#39;)
  })
}
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<pre><code class="javascript">import { render } from &#39;enzyme&#39;

describe(&#39;Enzyme Render&#39;, () =&gt; {
  it(&#39;Todo item should not have todo-done class&#39;, () =&gt; {
    let app = render(&lt;App /&gt;)
    expect(app.find(&#39;.todo-done&#39;).length).to.equal(0)
  })
})
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<pre><code class="javascript">import { mount } from &#39;enzyme&#39;

describe(&#39;Enzyme Mount&#39;, () =&gt; {
  it(&#39;should delete Todo when click button&#39;, () =&gt; {
    let app = mount(&lt;App /&gt;)
    let todoLength = app.find(&#39;li&#39;).length
    app.find(&#39;button.delete&#39;).at(0).simulate(&#39;click&#39;)
    expect(app.find(&#39;li&#39;).length).to.equal(todoLength - 1)
  })
})
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<pre><code class="javascript">it(&#39;simulates click events&#39;, () =&gt; {  
  const onButtonClick = sinon.spy()
  const wrapper = shallow(
    &lt;Foo onButtonClick={onButtonClick} /&gt;
  )
  wrapper.find(&#39;button&#39;).simulate(&#39;click&#39;)
  expect(onButtonClick.calledOnce).to.be.true
})
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<pre><code class="javascript">/* CSS Selector */
wrapper.find(&#39;.foo&#39;) //class syntax
wrapper.find(&#39;input&#39;) //tag syntax
wrapper.find(&#39;#foo&#39;) //id syntax 
wrapper.find(&#39;[htmlFor=&quot;foo&quot;]&#39;) //prop syntax


/* Component Constructor */
wrapper.find(MyComponent)
MyComponent.displayName = &#39;MyComponent&#39;
wrapper.find(&#39;MyComponent&#39;)

/* Object Property Selector */
const wrapper = mount(
  &lt;div&gt;
    &lt;span foo={3} bar={false} title=&quot;baz&quot; /&gt;
  &lt;/div&gt;
)

wrapper.find({ foo: 3 })
wrapper.find({ bar: false })
wrapper.find({ title: &#39;baz&#39;})
</code></pre>

</article></section></slide>
<slide class="slide" data-on-leave="outcallback"><section class="slide-wrapper"></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1><a href="http://nobackend.website" target="_blank">NoBackend Website</a></h1>

</hgroup><article>

<iframe data-src="http://nobackend.website" src="about:blank"></iframe>
</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'move',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./assets/slide.js"></script>
<link rel="stylesheet" href="./assets/slide.css">
<script src="./js/zoom.js"></script>

<!--placeholder-->
</body>
</html>
